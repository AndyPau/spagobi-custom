<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://java.sun.com/xml/ns/javaee" xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd" id="WebApp_ID" version="3.0">
  <display-name>SpagoBISocialAnalysis</display-name>
  
   <!--  ============================================================================ -->
	<!--  FILTERS								 									   -->
	<!--  ============================================================================ -->
		
	<!-- START-CAS ${enable.cas.end}
	
	<filter>
	
	  <filter-name>CAS Authentication Filter</filter-name>
	  <filter-class>org.jasig.cas.client.authentication.AuthenticationFilter</filter-class>
	  
	  <init-param>
	    <param-name>casServerLoginUrl</param-name>
	    <param-value>https://spagobitest:1447/cas/login</param-value>
	  </init-param>
	  
	  <init-param>
	    <param-name>serverName</param-name>
	    <param-value>spagobitest:1447</param-value>
	  </init-param>    
	
	</filter>
	
	<filter>
	
	  <filter-name>CAS Validation Filter</filter-name>	  
	  <filter-class>org.jasig.cas.client.validation.Cas20ProxyReceivingTicketValidationFilter</filter-class>
	  <init-param>
	    <param-name>casServerUrlPrefix</param-name>
	    <param-value>https://spagobitest:1447/cas/</param-value>
	  </init-param>
	  <init-param>
	    <param-name>serverName</param-name>
	    <param-value>https://spagobitest:1447</param-value>
	  </init-param>
	  
	</filter>		  
	
	<filter>
	  <filter-name>CAS HttpServletRequest Wrapper Filter</filter-name>
	  <filter-class>org.jasig.cas.client.util.HttpServletRequestWrapperFilter</filter-class>
	</filter>
	
	 ${enable.cas.start} END-CAS -->
	
	<filter>
        <filter-name>EncodingFilter</filter-name>
        <filter-class>it.eng.spagobi.utilities.filters.EncodingFilter</filter-class>
         <init-param>
            <param-name>encoding</param-name>
            <param-value>UTF-8</param-value>
        </init-param>
    </filter>		
	
	<filter>
		<filter-name>EngineCheckSessionFilter</filter-name>
		<filter-class>it.eng.spagobi.utilities.filters.EngineCheckSessionFilter</filter-class>
	</filter>
	
	<filter>
		<filter-name>SpagoBIAccessFilter</filter-name>
		<filter-class>
			it.eng.spagobi.utilities.filters.SpagoBIAccessFilter
		</filter-class>
	</filter>


 	 <filter-mapping>
      <filter-name>EncodingFilter</filter-name>
      <url-pattern>/restful-services/*</url-pattern>
   </filter-mapping>
  
    <!-- EngineCheckSessionFilter on AdapterHTTP; urls with NEW_SESSION=TRUE will open a new session if previous one has expired -->
    <filter-mapping>
        <filter-name>EngineCheckSessionFilter</filter-name>
        <url-pattern>/restful-services/*</url-pattern>
    </filter-mapping>


	<!-- START-CAS ${enable.cas.end}
	   <filter-mapping>
	    <filter-name>CAS Authentication Filter</filter-name>
	    <url-pattern>/restful-services/*</url-pattern>
	  </filter-mapping>  
	
	   <filter-mapping>
	    <filter-name>CAS Validation Filter</filter-name>
	    <url-pattern>/restful-services/*</url-pattern>
	  </filter-mapping>   
	
	   <filter-mapping>
	    <filter-name>CAS HttpServletRequest Wrapper Filter</filter-name>
	    <url-pattern>/restful-services/*</url-pattern>
	  </filter-mapping>  
	 ${enable.cas.start} END-CAS --> 


	<filter-mapping>
   		<filter-name>SpagoBIAccessFilter</filter-name>
   		<url-pattern>/restful-services/*</url-pattern>
	</filter-mapping>
    
    <listener>
        <listener-class>org.quartz.ee.servlet.QuartzInitializerListener</listener-class>
    </listener>
    
   <listener>  
   		<listener-class>it.eng.spagobi.twitter.analysis.cache.TwitterHibernateListener</listener-class>  
   </listener> 
    
    <context-param>
        <param-name>resteasy.servlet.mapping.prefix</param-name>
        <param-value>/restful-services</param-value>
    </context-param>
    
  <!--  ============================================================================ -->
	<!--  SERVLETS								 									   -->
	<!--  ============================================================================ -->
	 
	 <servlet>
		<servlet-name>TwitterSummaryTabServlet</servlet-name>
		<servlet-class>
			it.eng.spagobi.twitter.analysis.servlet.TwitterSummaryTabServlet
		</servlet-class>
	</servlet>
	
	<servlet>
		<servlet-name>TwitterTopicsTabServlet</servlet-name>
		<servlet-class>
			it.eng.spagobi.twitter.analysis.servlet.TwitterTopicsTabServlet
		</servlet-class>
	</servlet>
	
	<servlet>
		<servlet-name>TwitterNetworkTabServlet</servlet-name>
		<servlet-class>
			it.eng.spagobi.twitter.analysis.servlet.TwitterNetworkTabServlet
		</servlet-class>
	</servlet>
	
	<servlet>
		<servlet-name>TwitterDistributionTabServlet</servlet-name>
		<servlet-class>
			it.eng.spagobi.twitter.analysis.servlet.TwitterDistributionTabServlet
		</servlet-class>
	</servlet>
	
	<servlet>
		<servlet-name>TwitterSentimentTabServlet</servlet-name>
		<servlet-class>
			it.eng.spagobi.twitter.analysis.servlet.TwitterSentimentTabServlet
		</servlet-class>
	</servlet>
	
	<servlet>
		<servlet-name>TwitterImpactTabServlet</servlet-name>
		<servlet-class>
			it.eng.spagobi.twitter.analysis.servlet.TwitterImpactTabServlet
		</servlet-class>
	</servlet>
	
	<servlet>
		<servlet-name>TwitterROITabServlet</servlet-name>
		<servlet-class>
			it.eng.spagobi.twitter.analysis.servlet.TwitterROITabServlet
		</servlet-class>
	</servlet>
	
	<servlet>
		<servlet-name>TwitterErrorsServlet</servlet-name>
		<servlet-class>
			it.eng.spagobi.twitter.analysis.servlet.TwitterErrorsServlet
		</servlet-class>
	</servlet>


	<!--  ============================================================================ -->
	<!--  SERVLET MAPPINGS						 									   -->
	<!--  ============================================================================ -->
    
	<servlet-mapping>
		<servlet-name>TwitterSummaryTabServlet</servlet-name>
		<url-pattern>/tabs/summary</url-pattern>
	</servlet-mapping>
	
	<servlet-mapping>
		<servlet-name>TwitterTopicsTabServlet</servlet-name>
		<url-pattern>/tabs/topics</url-pattern>
	</servlet-mapping>
	
	<servlet-mapping>
		<servlet-name>TwitterNetworkTabServlet</servlet-name>
		<url-pattern>/tabs/network</url-pattern>
	</servlet-mapping>
	
	<servlet-mapping>
		<servlet-name>TwitterDistributionTabServlet</servlet-name>
		<url-pattern>/tabs/distribution</url-pattern>
	</servlet-mapping>
	
	<servlet-mapping>
		<servlet-name>TwitterSentimentTabServlet</servlet-name>
		<url-pattern>/tabs/sentiment</url-pattern>
	</servlet-mapping>
	
	<servlet-mapping>
		<servlet-name>TwitterImpactTabServlet</servlet-name>
		<url-pattern>/tabs/impact</url-pattern>
	</servlet-mapping>
	
	<servlet-mapping>
		<servlet-name>TwitterROITabServlet</servlet-name>
		<url-pattern>/tabs/roi</url-pattern>
	</servlet-mapping>
	
	<servlet-mapping>
		<servlet-name>TwitterErrorsServlet</servlet-name>
		<url-pattern>/error</url-pattern>
	</servlet-mapping>
	
	
    
    
    
    <error-page>
	  	<exception-type>java.lang.Throwable</exception-type>
	  	<location>/error</location>
	  </error-page>
		 
	  <error-page>
	  	<error-code>404</error-code>
	  	<location>/error</location>
	  </error-page>
  
	  <error-page>
	  	<error-code>500</error-code>
	  	<location>/error</location>
	  </error-page>
	  
	  <error-page>
	  	<error-code>400</error-code>
	  	<location>/error</location>
	  </error-page>
  
  
</web-app>