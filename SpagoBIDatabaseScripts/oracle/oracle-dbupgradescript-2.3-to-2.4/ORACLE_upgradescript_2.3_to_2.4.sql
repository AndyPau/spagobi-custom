/* Modifies for add menagement of notes linked to user */
ALTER TABLE SBI_OBJECT_NOTES ADD  OWNER VARCHAR2 (50);
ALTER TABLE SBI_OBJECT_NOTES ADD  ISPUBLIC SMALLINT;
ALTER TABLE SBI_OBJECT_NOTES ADD  (CREATION_DATE TIMESTAMP(6) DEFAULT SYSDATE NOT NULL );
ALTER TABLE SBI_OBJECT_NOTES ADD  (LAST_CHANGE_DATE TIMESTAMP(6) DEFAULT SYSDATE NOT NULL );
ALTER TABLE SBI_SUBOBJECTS MODIFY DESCRIPTION VARCHAR(1000) DEFAULT NULL;
ALTER TABLE SBI_DATA_SET ADD (DS_METADATA VARCHAR(2000) DEFAULT NULL);
/* force a valid value for date fields in existing records: */
UPDATE SBI_OBJECT_NOTES SET LAST_CHANGE_DATE = SYSDATE,CREATION_DATE =SYSDATE;

/* force a valid value for owner field in existing records: 
***************************** ATTENTION **********************************
* The OWNER value depends from your context... 
we suggest 'biadmin' because is the classic admin user in SpaogoBI demo: 
you should change this value with a valid user in your platfrom, in this way 
he may change or delete the EXISTING notes!!*/
UPDATE SBI_OBJECT_NOTES SET OWNER = 'biadmin';
/*************************************************************************/
COMMIT;

/* Modifies for add possibility to update subobjects. It's necessary delete all subobjects where 
name is null because we add not null constraint to name column. */
DELETE FROM SBI_REMEMBER_ME WHERE SUBOBJ_ID IN (SELECT SUBOBJ_ID FROM SBI_SUBOBJECTS WHERE NAME IS NULL OR NAME ='');
DELETE FROM SBI_AUDIT WHERE SUBOBJ_ID IN (SELECT SUBOBJ_ID FROM SBI_SUBOBJECTS WHERE NAME IS NULL OR NAME ='');
DELETE FROM SBI_MENU WHERE SUBOBJ_NAME IN (SELECT NAME FROM SBI_SUBOBJECTS WHERE NAME IS NULL OR NAME ='');
DELETE FROM SBI_BINARY_CONTENTS WHERE BIN_ID IN (SELECT BIN_ID FROM SBI_SUBOBJECTS WHERE NAME IS NULL OR NAME ='');
DELETE FROM SBI_SUBOBJECTS WHERE NAME IS NULL OR NAME ='';
COMMIT;
ALTER TABLE SBI_SUBOBJECTS MODIFY NAME VARCHAR2(50) NOT NULL;

/* Modified for metadata management */

ALTER TABLE SBI_OBJECTS DROP COLUMN DESCR_EXT;
/
ALTER TABLE SBI_OBJECTS DROP COLUMN OBJECTIVE;
/
ALTER TABLE SBI_OBJECTS DROP COLUMN LANGUAGE;
/
ALTER TABLE SBI_OBJECTS DROP COLUMN KEYWORDS;
/
ALTER TABLE SBI_EXT_ROLES ADD  SAVE_METADATA Number(38,0) Default 1;
/
CREATE SEQUENCE SBI_OBJ_METADATA_SEQ INCREMENT BY 1 START WITH 1 MAXVALUE 999999999999999 MINVALUE 1 NOCYCLE CACHE 20 NOORDER
/

CREATE TABLE SBI_OBJ_METADATA (
	OBJ_META_ID 		INTEGER NOT NULL,
    LABEL	 	        VARCHAR2(20) NOT NULL,
    NAME 	            VARCHAR2(40) NOT NULL,
    DESCRIPTION	        VARCHAR2(100),  
    DATA_TYPE_ID		INTEGER NOT NULL,
    CREATION_DATE 	    TIMESTAMP(6) NOT NULL,    
    PRIMARY KEY (OBJ_META_ID)
)
/

ALTER TABLE SBI_OBJ_METADATA ADD CONSTRAINT FK_SBI_OBJ_METADATA_1 FOREIGN KEY ( DATA_TYPE_ID ) REFERENCES SBI_DOMAINS(VALUE_ID)
/
CREATE TRIGGER TRG_SBI_OBJ_METADATA
  BEFORE INSERT
  ON SBI_OBJ_METADATA
  REFERENCING OLD AS OLD NEW AS NEW
  FOR EACH ROW
  DECLARE NUOVO_ID NUMBER;
BEGIN
IF :NEW.OBJ_META_ID IS NULL THEN
     SELECT SBI_OBJ_METADATA_SEQ.NEXTVAL INTO NUOVO_ID FROM DUAL;
     :NEW.OBJ_META_ID:=NUOVO_ID;
END IF;
END;
/

CREATE SEQUENCE SBI_OBJ_METACONTENTS_SEQ INCREMENT BY 1 START WITH 1 MAXVALUE 999999999999999 MINVALUE 1 NOCYCLE CACHE 20 NOORDER
/
CREATE TABLE SBI_OBJ_METACONTENTS (
  OBJ_METACONTENT_ID INTEGER  NOT NULL ,
  OBJMETA_ID 		 INTEGER  NOT NULL ,
  BIOBJ_ID 			 INTEGER  NOT NULL,
  SUBOBJ_ID 		 INTEGER,
  BIN_ID 			 INTEGER,
  CREATION_DATE 	 TIMESTAMP(6) NOT NULL,   
  LAST_CHANGE_DATE   TIMESTAMP(6) NOT NULL,   
    PRIMARY KEY (OBJ_METACONTENT_ID)
)
/

CREATE UNIQUE INDEX XAK1SBI_OBJ_METACONTENTS ON SBI_OBJ_METACONTENTS
(
        OBJMETA_ID                          ASC,
        BIOBJ_ID                            ASC,
        SUBOBJ_ID                           ASC
)
/

ALTER TABLE SBI_OBJ_METACONTENTS ADD CONSTRAINT FK_SBI_OBJ_METACONTENTS_1 FOREIGN KEY  ( OBJMETA_ID ) REFERENCES SBI_OBJ_METADATA (  OBJ_META_ID )
/
ALTER TABLE SBI_OBJ_METACONTENTS ADD CONSTRAINT FK_SBI_OBJ_METACONTENTS_2 FOREIGN KEY  ( BIOBJ_ID )   REFERENCES SBI_OBJECTS (  BIOBJ_ID )
/
ALTER TABLE SBI_OBJ_METACONTENTS ADD CONSTRAINT FK_SBI_OBJ_METACONTENTS_3 FOREIGN KEY  ( SUBOBJ_ID )  REFERENCES SBI_SUBOBJECTS (  SUBOBJ_ID )
/
ALTER TABLE SBI_OBJ_METACONTENTS ADD CONSTRAINT FK_SBI_OBJ_METACONTENTS_4 FOREIGN KEY  ( BIN_ID )     REFERENCES SBI_BINARY_CONTENTS(BIN_ID)
/

CREATE TRIGGER TRG_SBI_OBJ_METACONTENTS
  BEFORE INSERT
  ON SBI_OBJ_METACONTENTS
  REFERENCING OLD AS OLD NEW AS NEW
  FOR EACH ROW
  DECLARE NUOVO_ID NUMBER;
BEGIN
IF :NEW.OBJ_METACONTENT_ID IS NULL THEN
     SELECT SBI_OBJ_METACONTENTS_SEQ.NEXTVAL INTO NUOVO_ID FROM DUAL;
     :NEW.OBJ_METACONTENT_ID:=NUOVO_ID;
END IF;
END;
/

--adds new funcionality for metadata management
INSERT INTO SBI_USER_FUNC (NAME, DESCRIPTION) VALUES ('ObjMetadataManagement', 'ObjMetadataManagement');
INSERT INTO SBI_ROLE_TYPE_USER_FUNC VALUES((SELECT VALUE_ID FROM SBI_DOMAINS WHERE DOMAIN_CD='ROLE_TYPE' AND VALUE_CD='ADMIN'),(SELECT USER_FUNCT_ID FROM SBI_USER_FUNC WHERE NAME='ObjMetadataManagement' ));
COMMIT;
