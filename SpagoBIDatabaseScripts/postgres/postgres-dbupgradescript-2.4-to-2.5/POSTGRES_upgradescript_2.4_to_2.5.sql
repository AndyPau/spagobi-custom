/* Modifies to add Model Label */
ALTER TABLE SBI_KPI_MODEL ADD COLUMN KPI_MODEL_LBL VARCHAR(100);
UPDATE SBI_KPI_MODEL SET KPI_MODEL_LBL = KPI_MODEL_CD;
ALTER TABLE SBI_KPI_MODEL ALTER COLUMN KPI_MODEL_LBL SET NOT NULL;
DROP INDEX KPI_MODEL_CD;
CREATE UNIQUE INDEX UNIQUE_LABEL  ON SBI_KPI_MODEL(KPI_MODEL_LBL);
CREATE UNIQUE INDEX UNIQUE_PAR_ID_CD  ON SBI_KPI_MODEL(KPI_PARENT_MODEL_ID, KPI_MODEL_CD);

/* Modifies SBI_THRESHOLD_VALUE TABLE to add the selection to specify if the range is open or closed */
ALTER TABLE SBI_THRESHOLD_VALUE ADD COLUMN min_closed BOOLEAN;
ALTER TABLE SBI_THRESHOLD_VALUE ADD COLUMN max_closed BOOLEAN;
ALTER TABLE SBI_THRESHOLD_VALUE ADD COLUMN th_value INTEGER ;

/* Modifies SBI_KPI_MODEL_INST to specify a KPI INSTANCE or a MODEL INSTANCE LABEL */
ALTER TABLE SBI_KPI_MODEL_INST ADD COLUMN modelUUID VARCHAR(400);

ALTER TABLE SBI_LOV ALTER COLUMN LOV_PROVIDER TYPE TEXT;
ALTER TABLE SBI_LOV ALTER COLUMN LOV_PROVIDER SET DEFAULT NULL;

/**Internal profiling tables*/
CREATE SEQUENCE SBI_USER_SEQ INCREMENT 1 START  1 ;
CREATE SEQUENCE SBI_USER_ATTR_SEQ INCREMENT 1 START  1 ;
CREATE SEQUENCE SBI_USER_ROLE_SEQ INCREMENT 1 START  1 ;

CREATE TABLE SBI_USER (
	USER_ID VARCHAR(100) NOT NULL,
	PASSWORD VARCHAR(150),
	FULL_NAME VARCHAR(255),
	ID INTEGER DEFAULT nextval('SBI_USER_SEQ') NOT NULL,
	DT_PWD_BEGIN TIMESTAMP,
	DT_PWD_END TIMESTAMP,
	FLG_PWD_BLOCKED BOOLEAN,
	DT_LAST_ACCESS TIMESTAMP,
 PRIMARY KEY (ID)
 )WITHOUT OIDS;

CREATE TABLE SBI_ATTRIBUTE (
	ATTRIBUTE_NAME VARCHAR(255) NOT NULL,
	DESCRIPTION VARCHAR(500) NOT NULL,
	ATTRIBUTE_ID INTEGER DEFAULT nextval('SBI_USER_ATTR_SEQ') NOT NULL,
 PRIMARY KEY (ATTRIBUTE_ID)
 )WITHOUT OIDS;

CREATE TABLE SBI_USER_ATTRIBUTES (
	ID INTEGER DEFAULT nextval('SBI_USER_ROLE_SEQ') NOT NULL,
	ATTRIBUTE_ID INTEGER NOT NULL,
	ATTRIBUTE_VALUE VARCHAR(500),
 PRIMARY KEY (ID,ATTRIBUTE_ID)
 )WITHOUT OIDS;


CREATE TABLE SBI_EXT_USER_ROLES (
	ID INTEGER NOT NULL,
	EXT_ROLE_ID INTEGER NOT NULL,
 PRIMARY KEY (ID,EXT_ROLE_ID)
 )WITHOUT OIDS;

ALTER TABLE SBI_USER_ATTRIBUTES ADD FOREIGN KEY (ID) REFERENCES SBI_USER (ID);
ALTER TABLE SBI_EXT_USER_ROLES ADD FOREIGN KEY (ID) REFERENCES SBI_USER (ID);
ALTER TABLE SBI_USER_ATTRIBUTES ADD FOREIGN KEY (ATTRIBUTE_ID) REFERENCES SBI_ATTRIBUTE (ATTRIBUTE_ID);
ALTER TABLE SBI_EXT_USER_ROLES ADD FOREIGN KEY (EXT_ROLE_ID) REFERENCES SBI_EXT_ROLES (EXT_ROLE_ID);


--adds new funcionality for internal profiling management
INSERT INTO SBI_USER_FUNC (NAME, DESCRIPTION) VALUES ('ProfileManagement', 'ProfileManagement');
INSERT INTO  SBI_ROLE_TYPE_USER_FUNC values((SELECT VALUE_ID FROM SBI_DOMAINS WHERE DOMAIN_CD = 'ROLE_TYPE' AND VALUE_CD = 'ADMIN'), (SELECT USER_FUNCT_ID FROM SBI_USER_FUNC WHERE NAME='ProfileManagement'));
COMMIT;

/** configuration table*/
CREATE SEQUENCE SBI_CONFIG_SEQ INCREMENT 1 START  1 ;
CREATE TABLE SBI_CONFIG (
	ID 				INTEGER DEFAULT nextval('SBI_CONFIG_SEQ') NOT NULL,
	LABEL			VARCHAR(100) NOT NULL,
	NAME			VARCHAR(100) NULL,
	DESCRIPTION 	VARCHAR(500) NULL,
	IS_ACTIVE 		BOOLEAN DEFAULT TRUE,
	VALUE_CHECK 	VARCHAR(1000) NULL,
	VALUE_TYPE_ID 	INTEGER NULL,    
 PRIMARY KEY (ID));
 
 
CREATE UNIQUE INDEX XAK1SBI_CONFIG ON SBI_CONFIG
(
       LABEL                      
);

CREATE INDEX XIF3SBI_CONFIG ON SBI_CONFIG
(
       VALUE_TYPE_ID             
);

ALTER TABLE SBI_CONFIG ADD CONSTRAINT FK_sbi_config_1 FOREIGN KEY ( VALUE_TYPE_ID ) REFERENCES SBI_DOMAINS ( VALUE_ID );


/** change creation date datatype (date --> timestamp) */
ALTER TABLE SBI_VIEWPOINTS ALTER COLUMN  VP_CREATION_DATE TYPE TIMESTAMP;


CREATE SEQUENCE SBI_ACTIVITY_SEQ INCREMENT 1 START 1 ;
CREATE TABLE SBI_ACTIVITY_MONITORING (
  ID INTEGER DEFAULT nextval('SBI_ACTIVITY_SEQ') NOT NULL,
  ACTION_TIME DATE DEFAULT CURRENT_TIMESTAMP,
  USERNAME 	 	VARCHAR(40) NOT NULL,
  USERGROUP		VARCHAR(400),
  LOG_LEVEL 	VARCHAR(10) ,
  ACTION_CODE 	VARCHAR(45) NOT NULL,
  INFO 			VARCHAR(400),
  PRIMARY KEY (ID)
) WITHOUT OIDS;

CREATE UNIQUE INDEX XAK1SBI_USER ON SBI_USER
(
       USER_ID     
);
ALTER TABLE SBI_ALARM ALTER COLUMN ID_KPI_INSTANCE TYPE INTEGER,
 ALTER COLUMN ID_THRESHOLD_VALUE TYPE INTEGER;